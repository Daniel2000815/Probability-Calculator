{"version":3,"sources":["Components/Table.js","Components/Selector.js","Components/NumberField.js","Distributions/Distribution.js","Components/BarGraph.js","Libraries/MyMath.js","Distributions/Binomial.js","Distributions/BinomialNegativa1.js","Distributions/BinomialNegativa2.js","Distributions/Geometrica.js","Distributions/Hipergeometrica.js","Distributions/Pascal.js","Distributions/Poisson.js","App.js","reportWebVitals.js","index.js"],"names":["Table","data","media","_media","varianza","_varianza","desviacion","_desviacion","title","columns","field","style","width","margin","input","options","search","paging","Selector","Select","onChange","this","props","handleChange","fullWidth","MenuItem","value","Component","NumberField","num","min","max","TextField","id","label","variant","helperText","helpText","defaultValue","type","InputLabelProps","shrink","onInput","e","target","clamp","inputProps","step","Distribution","name","descripcion","BarGraph","height","legend","display","responsive","text","scales","yAxes","ticks","autoSkip","beginAtZero","React","factorial","n","choose","a","b","result","console","log","gr","labels","datasets","backgroundColor","highlightStroke","borderWidth","Binomial","changeP","event","setState","p","Number","changeN","bind","state","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","Array","from","keys","_data","calcularFuncion","i","prob","calcularProbabilidad","push","x","BinomialNegativa1","changeR","r","fill","map","_","idx","BinomialNegativa2","Geometrica","changePuntos","nPoints","Hipergeometrica","N","changen","changek","k","Pascal","Poisson","App","changeDistribution","distribution","ShowDistribution","className","element","createElement","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.696d0438.chunk.js","sourcesContent":["import React from 'react'\nimport MaterialTable from 'material-table'\n\nexport const Table=({_media, _varianza, _desviacion})=>{\n    const data=[\n        {media: _media, varianza: _varianza, desviacion: _desviacion}\n    ]\n\n    const columns=[\n        {title: \"Media\", field:'media'},\n        {title: \"Varianza\", field:'varianza'},\n        {title: \"Desviación Típica\", field:'desviacion'}\n\n    ]\n\n    const newLocal = (<div>\n        <MaterialTable title=\"Propiedades\"\n            data={data}\n            columns={columns}\n            style={{ width: '800px', margin: '10px', input: { margin: 10 } }}\n            options={{\n                search: false,\n                paging: false\n            }} />\n    </div>\n    )\n    return newLocal\n}","import React, {useState, Component} from 'react';\nimport {Select, MenuItem, TextField} from \"@material-ui/core\";\n\n\nclass Selector extends Component{\n\n    render(){\n        return (<div>\n            \n            <Select onChange={this.props.handleChange} options={this.props.options} fullWidth>\n                <MenuItem value={\"B\"}>Binomial</MenuItem>\n                <MenuItem value={\"BN1\"}>Binomial Negativa (v1)</MenuItem>\n                <MenuItem value={\"BN2\"}>Binomial Negativa (v2)</MenuItem>\n                <MenuItem value={\"G\"}>Geométrica</MenuItem>\n                <MenuItem value={\"Pc\"}>Pascal</MenuItem>\n                <MenuItem value={\"H\"}>Hipergeométrica</MenuItem>\n                <MenuItem value={\"P\"}>Poisson</MenuItem>     \n            </Select>           \n        </div>\n        )\n    }\n}\n\nexport default Selector;\n","import React, {Component} from 'react';\nimport {TextField} from '@material-ui/core'\n\nclass NumberField extends Component{\n    clamp(num, min, max) {\n        return num <= min ? min : num >= max ? max : num;\n    }\n\n    render(){ \n        return (\n        <TextField\n            id=\"margin-none\"\n            label={this.props.label}\n            variant=\"outlined\"\n            helperText={this.props.helpText}\n            defaultValue={this.props.defaultValue}\n            type=\"number\"\n            InputLabelProps={{\n                shrink: true,\n              }}\n            onInput={(e)=>{ \n                e.target.value = this.clamp(e.target.value, this.props.min, this.props.max)\n            }}\n            inputProps={{ step: this.props.step }}\n            style={{ width: '200px', margin: '10px', input: { margin: 10 } }}\n            onChange={this.props.handleChange}\n        />\n  \n        )\n    }\n}\n\nexport default NumberField;\n\n","import React, {Component} from 'react'; \nimport {Table} from '../Components/Table'\nimport NumberField from '../Components/NumberField'\n\n\nclass Distribution extends Component{\n \n  constructor () {\n    super();\n  }\n\n  render(){\n    \n    return(\n      <div> \n      <b>Distribución {this.props.name}: {this.props.descripcion}</b>\n      <Table \n      _media={this.props.media} \n      _varianza={this.props.varianza} \n      _desviacion={this.props.desviacion}/>\n      </div>\n    )\n  }\n\n}\n\nexport default Distribution;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nexport default class BarGraph extends React.Component {\n    render() {\n        return (\n            <div style={{height: \"250px\", width: \"500px\"}}>\n                <Bar\n                    data={this.props.data}\n                    options={{\n                        legend:{\n                            display: false\n                        },\n                       responsive: true,\n                       title: {text: 'FUNCIÓN DISTRIBUCIÓN', display: true},\n                       scales:{\n                           yAxes:[\n                               {\n                                   ticks:{\n                                        autoSkip: true,\n                                        beginAtZero: true,\n                                        min: 0,\n                                   }\n                               }\n                           ]\n                       }\n                    }}\n                />\n            </div>\n        );\n    }\n}","export const factorial = (n) => {\n    return n >= 1 ? n * factorial(n - 1) : 1;\n}\n\nexport const choose = (a,b) => {\n    let result = (factorial(a))/(factorial(b) * factorial(a-b));\n    console.log(a + \" , \" + b + \" = \" + result);\n    return result;\n}","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Binomial extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial\",\n        p: 0,\n        n: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.n !== this.state.n) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.n + 1).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.n * this.state.p;  \n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.n * this.state.p * (1-this.state.p);  \n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.n * this.state.p * (1-this.state.p)) ** (1/2);\n\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.n; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = choose(this.state.n, x) * this.state.p**x * (1-this.state.p)**(this.state.n-x);\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"n\"} min={0} max={9999999} defaultValue={0} helpText={\"Población\"} step={\"1\"} handleChange={this.changeN}/>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad\"} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph data={gr}/>\n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeN = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n}\n\nexport default Binomial;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\n\nclass BinomialNegativa1 extends Component {\n    constructor (props) {\n      super(props);\n      this.changeR = this.changeR.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial Negativa (v1)\",\n        descripcion: \"Número de fracasos antes del k-ésimo éxito.\",\n        p: 0,\n        r: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.r !== this.state.r) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n\n        gr.labels = Array(this.state.r*3 - this.state.r - 1).fill().map((_, idx) => this.state.r-1 + idx)\n        let _data = this.calcularFuncion();\n      \n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.r * (1-this.state.p) / this.state.p;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.r * (1-this.state.p) / this.state.p**2;\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.r * (1-this.state.p) / this.state.p**2)**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = this.state.r-1 ; i <= this.state.r*3; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = choose(x+this.state.r -1, x) * this.state.p**(this.state.r) * (1-this.state.p)**x;\n      return result; \n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad\"} handleChange={this.changeP}/>\n          <NumberField label={\"r\"} min={1} max={999999} step={\"1\"} defaultValue={1} helpText={\"Nº éxito\"} handleChange={this.changeR}/>\n          <Distribution \n            descripcion={this.state.descripcion}\n            name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph data={gr}/>\n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeR = async function(event) {\n      await this.setState({ r: Number(event.target.value) });\n    };\n}\n\nexport default BinomialNegativa1;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\n\nclass BinomialNegativa2 extends Component {\n    constructor (props) {\n      super(props);\n      this.changeR = this.changeR.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial Negativa (v2)\",\n        p: 0,\n        r: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.r !== this.state.r) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n\n        gr.labels = Array(this.state.r*3 - this.state.r).fill().map((_, idx) => this.state.r + idx)\n        let _data = this.calcularFuncion();\n      \n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.r / this.state.p;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.r / this.state.p**2;\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.r / this.state.p**2)**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = this.state.r ; i <= this.state.r*3; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = choose(x -1, x-this.state.r) * this.state.p**(this.state.r) * (1-this.state.p)**(x-+this.state.r);\n      return result; \n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad\"} handleChange={this.changeP}/>\n          <NumberField label={\"r\"} min={1} max={999999} step={\"1\"} defaultValue={0} helpText={\"Nº éxito\"} handleChange={this.changeR}/>\n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph data={gr}/>\n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeR = async function(event) {\n      await this.setState({ r: Number(event.target.value) });\n    };\n}\n\nexport default BinomialNegativa2;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Geometrica extends Component {\n    constructor (props) {\n      super(props);\n      this.changeP = this.changeP.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Geométrica\",\n        p: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 1\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.nPoints).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = (1-this.state.p) / this.state.p ;  \n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = (1-this.state.p) / (this.state.p**2) ;  \n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = ((1-this.state.p) / (this.state.p**2))**(0.5) ;  \n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = (1-this.state.p)**x * this.state.p \n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad\"} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <span> <BarGraph data={gr}/></span>\n          <NumberField label={\"Puntos a calcular\"} min={0} max={999999} step={\"1\"} defaultValue={1} handleChange={this.changePuntos}/>         \n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event) {\n      await this.setState({ nPoints: Number(event.target.value) });\n    };\n\n}\n\nexport default Geometrica;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Hipergeometrica extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changen = this.changen.bind(this);\n      this.changek = this.changek.bind(this);\n\n      this.state={\n        name: \"Hipergeométrica\",\n        N: 0,\n        n: 0,\n        k: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.N !== this.state.N || prevState.n !== this.state.n || prevState.k !== this.state.k) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.n+1).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.k * this.state.n / this.state.N;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = (this.state.k * this.state.n / this.state.N) * (1-this.state.k/this.state.N)*((this.state.N-this.state.n)/(this.state.N-1));\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = ((this.state.k * this.state.n / this.state.N) * (1-this.state.k/this.state.N)*((this.state.N-this.state.n)/(this.state.N-1)))**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.n; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let n1 = choose(this.state.k, x);\n      let n2 = choose(this.state.N-this.state.k, this.state.n-x);\n      let n3 = choose(this.state.N, this.state.n);\n\n      let result = n1*n2/n3;\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"N\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Población original\"} handleChange={this.changeN}/>\n          <NumberField label={\"n\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Extracción\"} handleChange={this.changen}/>\n          <NumberField label={\"k\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Población marcada\"} handleChange={this.changek}/>          \n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <span> <BarGraph data={gr}/></span>          \n        </div>\n      )\n    }\n\n    changeN = async function(event) {\n      await this.setState({ N: Number(event.target.value) });\n    };\n\n    changen = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n\n    changek = async function(event) {\n      await this.setState({ k: Number(event.target.value) });\n    };\n\n\n}\n\nexport default Hipergeometrica;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Pascal extends Component {\n    constructor (props) {\n      super(props);\n      this.changeP = this.changeP.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Pascal\",\n        p: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 1\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.nPoints).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = 1 / this.state.p ;  \n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = (1-this.state.p) / (this.state.p**2) ;  \n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = ((1-this.state.p) / (this.state.p**2))**(0.5) ;  \n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = (1-this.state.p)**(x-1) * this.state.p \n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad\"} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <span> <BarGraph data={gr}/></span>\n          <NumberField label={\"Puntos a calcular\"} min={0} max={999999} step={\"1\"} defaultValue={1} handleChange={this.changePuntos}/>         \n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event) {\n      await this.setState({ nPoints: Number(event.target.value) });\n    };\n\n}\n\nexport default Pascal;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \n\nclass Poisson extends Distribution {\n    constructor () {\n      super();\n      this.name = \"Poisson\";\n    }\n\n}\n\nexport default Poisson;","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport {Table} from './Components/Table'\nimport Selector from './Components/Selector'\nimport NumberField from './Components/NumberField'\nimport Binomial from './Distributions/Binomial'\nimport BinomialNegativa1 from './Distributions/BinomialNegativa1'\nimport BinomialNegativa2 from './Distributions/BinomialNegativa2'\nimport Geomretrica from './Distributions/Geometrica'\nimport Hipergeometrica from './Distributions/Hipergeometrica'\nimport Pascal from './Distributions/Pascal'\nimport Poisson from './Distributions/Poisson'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n        distribution: null,\n    }\n  }\n\n  changeDistribution = event =>{\n    this.setState({distribution: event.target.value});\n  }\n\n  ShowDistribution = () => {\n      if(this.state.distribution === \"B\"){\n        return <Binomial />\n      }\n      else if(this.state.distribution === \"BN1\"){\n        return <BinomialNegativa1 />\n      }\n      else if(this.state.distribution === \"BN2\"){\n        return <BinomialNegativa2 />\n      }\n      else if(this.state.distribution === \"G\"){\n        return <Geomretrica />\n      }\n      else if(this.state.distribution === \"Pc\"){\n        return <Pascal />\n      }\n      else if(this.state.distribution === \"H\"){\n        return <Hipergeometrica />\n      }\n      else if(this.state.distribution === \"P\"){\n        return <Poisson />\n      }\n      else{\n        return <p>Selecciona distribución...</p>\n      }\n  }\n\n  render(){\n    return (\n      <div className = \"PROB\"> \n        <Selector handleChange={this.changeDistribution} options={this.options}/>\n        <this.ShowDistribution/>\n      </div>\n    );\n  }\n}\n\nvar element = React.createElement('h1', { className: 'greeting' }, 'Hello, world!');\nReactDOM.render(element, document.getElementById('root'));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}