{"version":3,"sources":["Components/Table.js","Components/Selector.js","Components/NumberField.js","Distributions/Distribution.js","Components/BarGraph.js","Libraries/MyMath.js","Components/CalcProb.js","Distributions/Binomial.js","Components/NumberSlider.js","Distributions/BinomialNegativa1.js","Distributions/BinomialNegativa2.js","Distributions/Geometrica.js","Distributions/Hipergeometrica.js","Distributions/Pascal.js","Distributions/Poisson.js","App.js","reportWebVitals.js","index.js"],"names":["Table","data","media","_media","varianza","_varianza","desviacion","_desviacion","descripcion","_descripcion","title","columns","field","style","margin","input","options","search","paging","Selector","Select","onChange","this","props","handleChange","fullWidth","MenuItem","value","Component","NumberField","num","min","max","TextField","id","label","variant","helperText","helpText","defaultValue","type","InputLabelProps","shrink","onInput","e","target","clamp","inputProps","step","width","error","Distribution","BarGraph","float","display","justifyContent","legend","responsive","text","scales","yAxes","ticks","autoSkip","beginAtZero","React","factorial","n","choose","a","b","result","console","log","CalcProb","alignContent","verticalAlign","padding","Slider","range","valueLabelDisplay","aria-labelledby","gr","labels","datasets","backgroundColor","highlightStroke","borderWidth","Binomial","changeRange","event","setState","probRange","changeP","p","Number","changeN","bind","state","name","probabilidad","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","Array","from","keys","_data","calcularFuncion","res","i","calcularProbabilidad","prob","push","x","NumberSlider","default","marks","height","orientation","BinomialNegativa1","changeR","r","changePuntos","nPoints","BinomialNegativa2","fill","map","_","idx","Geometrica","Hipergeometrica","N","changen","changek","k","start","end","e1","e2","e4","Pascal","Poisson","changeL","l","Math","exp","App","changeDistribution","distribution","ShowDistribution","className","element","createElement","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.0f6eb6c7.chunk.js","sourcesContent":["import React from 'react'\nimport MaterialTable from 'material-table'\n\nexport const Table=({_media, _varianza, _desviacion, _descripcion})=>{\n    const data=[\n        {media: _media, varianza: _varianza, desviacion: _desviacion, descripcion: _descripcion}\n    ]\n\n    const columns=[\n        {title: \"Descripción\", field:'descripcion'},\n        {title: \"Media\", field:'media'},\n        {title: \"Varianza\", field:'varianza'},\n        {title: \"Desviación Típica\", field:'desviacion'}\n\n    ]\n\n    const newLocal = (<div>\n        <MaterialTable title=\"Propiedades\"\n            data={data}\n            columns={columns}\n            style={{  margin: '10px', input: { margin: 10 } }}\n            options={{\n                search: false,\n                paging: false\n            }} />\n    </div>\n    )\n    return newLocal\n}","import React, {useState, Component} from 'react';\nimport {Select, MenuItem, TextField} from \"@material-ui/core\";\n\n\nclass Selector extends Component{\n\n    render(){\n        return (<div>\n            \n            <Select onChange={this.props.handleChange} options={this.props.options} fullWidth>\n                <MenuItem value={\"B\"}>Binomial</MenuItem>\n                <MenuItem value={\"BN1\"}>Binomial Negativa (v1)</MenuItem>\n                <MenuItem value={\"BN2\"}>Binomial Negativa (v2)</MenuItem>\n                <MenuItem value={\"G\"}>Geométrica</MenuItem>\n                <MenuItem value={\"Pc\"}>Pascal</MenuItem>\n                <MenuItem value={\"H\"}>Hipergeométrica</MenuItem>\n                <MenuItem value={\"P\"}>Poisson</MenuItem>     \n            </Select>           \n        </div>\n        )\n    }\n}\n\nexport default Selector;\n","import React, {Component} from 'react';\nimport {TextField} from '@material-ui/core'\n\nclass NumberField extends Component{\n    clamp(num, min, max) {\n        return num <= min ? min : num >= max ? max : num;\n    }\n\n    render(){ \n        return (\n        <TextField\n            id=\"margin-none\"\n            label={this.props.label}\n            variant=\"outlined\"\n            helperText={this.props.helpText}\n            defaultValue={this.props.defaultValue}\n            type=\"number\"\n            InputLabelProps={{\n                shrink: true,\n              }}\n            onInput={(e)=>{ \n                e.target.value = this.clamp(e.target.value, this.props.min, this.props.max)\n            }}\n            inputProps={{ step: this.props.step }}\n            style={{ width: '200px', margin: '10px', input: { margin: 10 } }}\n            onChange={this.props.handleChange}\n            error={this.props.error}\n        />\n  \n        )\n    }\n}\n\nexport default NumberField;\n\n","import React, {Component} from 'react'; \nimport {Table} from '../Components/Table'\nimport NumberField from '../Components/NumberField'\n\n\nclass Distribution extends Component{\n \n  constructor () {\n    super();\n  }\n\n  render(){\n    \n    return(\n      <div> \n      <Table \n      _descripcion={this.props.descripcion}\n      _media={this.props.media} \n      _varianza={this.props.varianza} \n      _desviacion={this.props.desviacion}/>\n      </div>\n    )\n  }\n\n}\n\nexport default Distribution;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {Select} from '@material-ui/core';\n\nexport default class BarGraph extends React.Component {\n    render() {\n        return (\n            <div style={{float:\"left\",  display: \"flex\", justifyContent: \"space-between\" }}>\n\n            <span><div style={{ width: \"500px\" }}>\n                <Bar\n                    data={this.props.data}\n                    options={{\n                        legend:{\n                            display: false\n                        },\n                       responsive: true,\n                       title: {text: 'FUNCIÓN DISTRIBUCIÓN', display: true},\n                       scales:{\n                           yAxes:[\n                               {\n                                   ticks:{\n                                        autoSkip: true,\n                                        beginAtZero: true,\n                                        min: 0,\n                                   }\n                               }\n                           ]\n                       }\n                    }}\n                />\n            </div></span>\n        </div>\n        );\n    }\n}","export const factorial = (n) => {\n    return n >= 1 ? n * factorial(n - 1) : 1;\n}\n\nexport const choose = (a,b) => {\n    let result = (factorial(a))/(factorial(b) * factorial(a-b));\n    console.log(a + \" , \" + b + \" = \" + result);\n    return result;\n}","import React, {Component} from 'react';\nimport {Slider} from '@material-ui/core'\n\nclass CalcProb extends Component{\n\n    render(){ \n        return (\n            <div style={{float:\"right\", alignContent:\"center\",verticalAlign:\"middle\", padding:\"50px\" , display: \"flex\" }}>\n            <p>PROB: {this.props.result}</p>\n\n            <Slider style={{width:\"200px\"}}\n                min={this.props.min}\n                max={this.props.max}\n                value={this.props.range}\n                onChange={this.props.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                valueLabelDisplay=\"on\"\n            />\n            </div>\n  \n        )\n    }\n}\n\nexport default CalcProb;\n\n","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport FunctionGrpah from '../Components/FunctionGraph';\n\nimport {choose, factorial} from '../Libraries/MyMath';\nimport CalcProb from '../Components/CalcProb';\n\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Binomial extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changeP = this.changeP.bind(this);\n      this.changeRange = this.changeRange.bind(this);\n\n      this.state={\n        name: \"Binomial\",\n        descripcion: \"Número de éxitos en n pruebas.\",\n        p: 0,\n        n: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        probRange: [0,0],\n        probabilidad: 0\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.n !== this.state.n || prevState.probRange !== this.state.probRange) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.n + 1).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n\n        let res = 0;\n        console.log(\"CALCULANDO ENTRE \" + this.state.probRange[0] + \" Y \" + this.state.probRange[1]);\n        for(let i=this.state.probRange[0]; i<=this.state.probRange[1]; i++){\n          console.log(this.calcularProbabilidad(i))\n          res += this.calcularProbabilidad(i);\n        }\n        console.log(\"RES= \" + res );\n        this.setState({\n          probabilidad: res\n        })\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.n * this.state.p;  \n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.n * this.state.p * (1-this.state.p);  \n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.n * this.state.p * (1-this.state.p)) ** (1/2);\n\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.n; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = choose(this.state.n, x) * this.state.p**x * (1-this.state.p)**(this.state.n-x);\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"n\"} min={0} max={9999999} defaultValue={0} helpText={\"Pruebas\"} step={\"1\"} handleChange={this.changeN}/>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad éxito\"} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            descripcion={this.state.descripcion}\n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph data={gr}/>\n          <CalcProb result={this.state.probabilidad} min={0} max={this.state.n} range={this.state.probRange} handleChange={this.changeRange}/>\n          <FunctionGrpah/>\n          \n        </div>\n      )\n    }\n\n    changeRange = async function(event, value) {\n      await this.setState({ probRange: value });\n    };\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeN = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n}\n\nexport default Binomial;","import React, {Component} from 'react';\nimport {Slider} from '@material-ui/core'\n\nclass NumberSlider extends Component{\n    clamp(num, min, max) {\n        return num <= min ? min : num >= max ? max : num;\n    }\n\n\n    render(){ \n        return (\n        <Slider width={200}\n            defaultValue={this.props.default}\n            step={this.props.step}\n            marks={true}\n            min={this.props.min}\n            max={this.props.max}\n            onChange={this.props.handleChange}\n            valueLabelDisplay=\"auto\"\n            style={{ height: '225px', margin: '10px', input: { margin: 10 } }}\n            orientation=\"vertical\"\n        />\n  \n        )\n    }\n}\n\nexport default NumberSlider;\n\n","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport NumberSlider from '../Components/NumberSlider';\nimport {choose, factorial} from '../Libraries/MyMath';\nimport CalcProb from '../Components/CalcProb';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\n\nclass BinomialNegativa1 extends Component {\n    constructor (props) {\n      super(props);\n      this.changeR = this.changeR.bind(this);\n      this.changeP = this.changeP.bind(this);\n      this.changeRange = this.changeRange.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Binomial Negativa (v1)\",\n        descripcion: \"Número de fracasos ANTES del k-ésimo éxito.\",\n        p: 0,\n        r: 1,\n        media: 0,\n        varianza: 0,\n        nPoints: 1,\n        desviacion: 0,\n        probRange: [0,0],\n        probabilidad: 0\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints || prevState.r !== this.state.r || prevState.probRange !== this.state.probRange) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n\n        gr.labels = Array.from(Array(this.state.nPoints).keys());\n        let _data = this.calcularFuncion();\n      \n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n\n        let res = 0;\n        console.log(\"CALCULANDO ENTRE \" + this.state.probRange[0] + \" Y \" + this.state.probRange[1]);\n        for(let i=this.state.probRange[0]; i<=this.state.probRange[1]; i++){\n          console.log(this.calcularProbabilidad(i))\n          res += this.calcularProbabilidad(i);\n        }\n        console.log(\"RES= \" + res );\n        this.setState({\n          probabilidad: res\n        })\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.r * (1-this.state.p) / this.state.p;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.r * (1-this.state.p) / this.state.p**2;\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.r * (1-this.state.p) / this.state.p**2)**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = this.state.r-1 ; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = choose(x+this.state.r -1, x) * this.state.p**(this.state.r) * (1-this.state.p)**x;\n      return result; \n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad éxito\"} handleChange={this.changeP}/>\n          <NumberField label={\"k\"} min={1} max={999999} step={\"1\"} defaultValue={1} helpText={\"Nº éxito\"} handleChange={this.changeR}/>\n          <Distribution \n            descripcion={this.state.descripcion}\n            name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph data={gr}/>\n          <NumberSlider min={0} max={100} default={1} step={1} handleChange={this.changePuntos}/>\n          <CalcProb result={this.state.probabilidad} min={0} max={this.state.nPoints-1} range={this.state.probRange} handleChange={this.changeRange}/>\n          \n        </div>\n      )\n    }\n\n    changeRange = async function(event, value) {\n      await this.setState({ probRange: value });\n    };\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeR = async function(event) {\n      await this.setState({ r: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event, value) {\n      await this.setState({ nPoints: Number(value) });\n    };\n}\n\nexport default BinomialNegativa1;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\nimport CalcProb from '../Components/CalcProb';\nimport NumberSlider from '../Components/NumberSlider';\n\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\n\nclass BinomialNegativa2 extends Component {\n    constructor (props) {\n      super(props);\n      this.changeR = this.changeR.bind(this);\n      this.changeP = this.changeP.bind(this);\n      this.changeRange = this.changeRange.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n\n      this.state={\n        name: \"Binomial Negativa (v2)\",\n        descripcion: \"Número de fracasos HASTA el k-ésimo éxito.\",\n        p: 0,\n        r: 1,\n        media: 0,\n        nPoints: 1,\n        varianza: 0,\n        desviacion: 0,\n        probRange: [0,0],\n        probabilidad: 0\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints ||  prevState.r !== this.state.r || prevState.probRange !== this.state.probRange) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n\n        gr.labels = Array(this.state.nPoints - this.state.r + 1).fill().map((_, idx) =>  this.state.r + idx)\n        let _data = this.calcularFuncion();\n      \n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n\n        let res = 0;\n        console.log(\"CALCULANDO ENTRE \" + this.state.probRange[0] + \" Y \" + this.state.probRange[1]);\n        for(let i=this.state.probRange[0]; i<=this.state.probRange[1]; i++){\n          console.log(this.calcularProbabilidad(i))\n          res += this.calcularProbabilidad(i);\n        }\n        console.log(\"RES= \" + res );\n        this.setState({\n          probabilidad: res\n        })\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.r / this.state.p;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.r / this.state.p**2;\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.r / this.state.p**2)**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = this.state.r ; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = choose(x -1, x-this.state.r) * this.state.p**(this.state.r) * (1-this.state.p)**(x-+this.state.r);\n      return result; \n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad éxito\"} handleChange={this.changeP}/>\n          <NumberField label={\"k\"} min={1} max={999999} step={\"1\"} defaultValue={1} helpText={\"Nº éxito\"} handleChange={this.changeR}/>\n          <Distribution name={this.state.name} \n            descripcion={this.state.descripcion}\n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph data={gr}/>\n          <NumberSlider min={0} max={100} default={1} step={1} handleChange={this.changePuntos}/>\n          <CalcProb result={this.state.probabilidad} min={this.state.r} max={this.state.nPoints} range={this.state.probRange} handleChange={this.changeRange}/>\n\n          \n        </div>\n      )\n    }\n\n    changeRange = async function(event, value) {\n      await this.setState({ probRange: value });\n    };\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeR = async function(event) {\n      await this.setState({ r: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event, value) {\n      await this.setState({ nPoints: Number(value) });\n    };\n}\n\nexport default BinomialNegativa2;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport NumberSlider from '../Components/NumberSlider';\n\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Geometrica extends Component {\n    constructor (props) {\n      super(props);\n      this.changeP = this.changeP.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Geométrica\",\n        descripcion: \"Nº de fracasos ANTES del primer éxito.\",\n        p: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 1\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.nPoints).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = (1-this.state.p) / this.state.p ;  \n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = (1-this.state.p) / (this.state.p**2) ;  \n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = ((1-this.state.p) / (this.state.p**2))**(0.5) ;  \n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = (1-this.state.p)**x * this.state.p \n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad éxito\"} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            descripcion={this.state.descripcion}\n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <span> <BarGraph data={gr}/></span>\n          <NumberSlider min={0} max={40} default={1} step={1} handleChange={this.changePuntos}/>\n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event, value) {\n      await this.setState({ nPoints: Number(value) });\n    };\n\n}\n\nexport default Geometrica;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Hipergeometrica extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changen = this.changen.bind(this);\n      this.changek = this.changek.bind(this);\n\n      this.state={\n        name: \"Hipergeométrica\",\n        descripcion: \"Nº de éxitos tras n extracciones sin reemplazamiento de una población de tamaño N, con k individuos de una clase (éxito) y N-k de otra (fracaso).\",\n        N: 0,\n        n: 0,\n        k: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.N !== this.state.N || prevState.n !== this.state.n || prevState.k !== this.state.k) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n\n        let start = this.state.n;\n        let end = this.state.k;\n\n        gr.labels = Array(end - start + 1).fill().map((_, idx) => start + idx);\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.k * this.state.n / this.state.N;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = (this.state.k * this.state.n / this.state.N) * (1-this.state.k/this.state.N)*((this.state.N-this.state.n)/(this.state.N-1));\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = ((this.state.k * this.state.n / this.state.N) * (1-this.state.k/this.state.N)*((this.state.N-this.state.n)/(this.state.N-1)))**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.n; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let n1 = choose(this.state.k, x);\n      let n2 = choose(this.state.N-this.state.k, this.state.n-x);\n      let n3 = choose(this.state.N, this.state.n);\n\n      let result = n1*n2/n3;\n      return result;\n    }\n\n    render(){ \n      let e1 = this.state.N<this.state.n;\n      let e2 = this.state.n<this.state.k;\n      let e4=e1|e2;\n\n      return(\n        <div>\n          <NumberField error={e1} label={\"N\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Población original\"} handleChange={this.changeN}/>\n          <NumberField error={e4} label={\"n\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Extracción\"} handleChange={this.changen}/>\n          <NumberField error={e2} label={\"k\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Población marcada\"} handleChange={this.changek}/>          \n          <Distribution name={this.state.name} \n            descripcion= {this.state.descripcion}\n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <span> <BarGraph data={gr}/></span>          \n        </div>\n      )\n    }\n\n    changeN = async function(event) {\n      await this.setState({ N: Number(event.target.value) });\n    };\n\n    changen = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n\n    changek = async function(event) {\n      await this.setState({ k: Number(event.target.value) });\n    };\n\n\n}\n\nexport default Hipergeometrica;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\nimport NumberSlider from '../Components/NumberSlider';\nimport CalcProb from '../Components/CalcProb';\n\nimport {Slider} from '@material-ui/core';\n\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: [],\n    }\n  ]\n}\n\n\nclass Pascal extends Component {\n    constructor (props) {\n      super(props);\n      this.changeP = this.changeP.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n      this.changeRange = this.changeRange.bind(this);\n\n      this.state={\n        name: \"Pascal\",\n        descripcion: \"Nº de fracasos HASTA el primer éxito.\",\n        p: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 1,\n        probRange: [0,0],\n        probabilidad: 0\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints || prevState.probRange !== this.state.probRange) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.nPoints).keys());\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n\n        let res = 0;\n        console.log(\"CALCULANDO ENTRE \" + this.state.probRange[0] + \" Y \" + this.state.probRange[1]);\n        for(let i=this.state.probRange[0]; i<=this.state.probRange[1]; i++){\n          console.log(this.calcularProbabilidad(i))\n          res += this.calcularProbabilidad(i);\n        }\n        console.log(\"RES= \" + res );\n        this.setState({\n          probabilidad: res\n        })\n        \n      }\n\n    }\n\n    calcularMedia() {\n      let result = 1 / this.state.p ;  \n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = (1-this.state.p) / (this.state.p**2) ;  \n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = ((1-this.state.p) / (this.state.p**2))**(0.5) ;  \n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = (1-this.state.p)**(x-1) * this.state.p \n      return result;\n    }\n\n    render(){\n\n\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad éxito\"} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            descripcion={this.state.descripcion}\n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n\n          <>\n          <BarGraph data={gr}/>\n          <NumberSlider min={0} max={40} default={1} step={1} handleChange={this.changePuntos}/>\n          <CalcProb result={this.state.probabilidad} min={0} max={this.state.nPoints} range={this.state.probRange} handleChange={this.changeRange}/>\n          \n          </>\n        </div>\n      )\n    }\n\n    changeRange = async function(event, value) {\n      await this.setState({ probRange: value });\n    };\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event, value) {\n      await this.setState({ nPoints: Number(value) });\n    };\n\n}\n\nexport default Pascal;","import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport NumberSlider from '../Components/NumberSlider';\n\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Poisson extends Component {\n    constructor (props) {\n      super(props);\n      this.changeL = this.changeL.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Poisson\",\n        descripcion: \"Número de veces que ocurre un suceso RARO por unidades de tiempo.\",\n        l: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 1\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.l !== this.state.l || prevState.nPoints !== this.state.nPoints) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.nPoints).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      return this.state.l;\n    }\n  \n    calcularVarianza() {\n      return this.state.l;\n    }\n\n    calcularDesviacion(){\n      return this.state.l**(0.5);\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = Math.exp(-this.state.l) * (this.state.l ** x) / factorial(x);\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"λ\"} min={0} max={999999} step={\"0.1\"} defaultValue={0} helpText={\"Proporción\"} handleChange={this.changeL}/>\n          \n          \n          <Distribution name={this.state.name} \n            descripcion={this.state.descripcion}\n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <>\n          <span> <BarGraph data={gr}/> </span>\n          <NumberSlider min={0} max={70} default={1} step={1} handleChange={this.changePuntos}/>\n          </>\n        \n        </div>\n      )\n    }\n\n    changeL = async function(event) {\n      await this.setState({ l: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event, value) {\n      await this.setState({ nPoints: Number(value) });\n    };\n\n}\n\nexport default Poisson;","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport {Table} from './Components/Table'\nimport Selector from './Components/Selector'\nimport NumberField from './Components/NumberField'\nimport Binomial from './Distributions/Binomial'\nimport BinomialNegativa1 from './Distributions/BinomialNegativa1'\nimport BinomialNegativa2 from './Distributions/BinomialNegativa2'\nimport Geomretrica from './Distributions/Geometrica'\nimport Hipergeometrica from './Distributions/Hipergeometrica'\nimport Pascal from './Distributions/Pascal'\nimport Poisson from './Distributions/Poisson'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n        distribution: null,\n    }\n  }\n\n  changeDistribution = event =>{\n    this.setState({distribution: event.target.value});\n  }\n\n  ShowDistribution = () => {\n      if(this.state.distribution === \"B\"){\n        return <Binomial />\n      }\n      else if(this.state.distribution === \"BN1\"){\n        return <BinomialNegativa1 />\n      }\n      else if(this.state.distribution === \"BN2\"){\n        return <BinomialNegativa2 />\n      }\n      else if(this.state.distribution === \"G\"){\n        return <Geomretrica />\n      }\n      else if(this.state.distribution === \"Pc\"){\n        return <Pascal />\n      }\n      else if(this.state.distribution === \"H\"){\n        return <Hipergeometrica />\n      }\n      else if(this.state.distribution === \"P\"){\n        return <Poisson />\n      }\n      else{\n        return <p>Selecciona distribución...</p>\n      }\n  }\n\n  render(){\n    return (\n      <div className = \"PROB\"> \n        <Selector handleChange={this.changeDistribution} options={this.options}/>\n        <this.ShowDistribution/>\n      </div>\n    );\n  }\n}\n\nvar element = React.createElement('h1', { className: 'greeting' }, 'Hello, world!');\nReactDOM.render(element, document.getElementById('root'));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}