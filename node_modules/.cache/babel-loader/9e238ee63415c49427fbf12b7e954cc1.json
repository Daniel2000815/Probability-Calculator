{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/exampleproject/src/Distributions/Binomial.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\n\nclass Binomial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeP = async function (event) {\n      await this.setState({\n        p: Number(event.target.value)\n      });\n      console.log(\"p:\" + this.state.p);\n      console.log(\"leido:\" + event.target.value);\n      this.calcularTodo();\n    };\n\n    this.changeN = async function (event) {\n      await this.setState({\n        n: Number(event.target.value)\n      });\n      this.calcularTodo();\n    };\n\n    this.changeN = this.changeN.bind(this);\n    this.changeP = this.changeP.bind(this);\n    this.state = {\n      name: \"Binomial\",\n      p: 0,\n      n: 0,\n      media: 0,\n      varianza: 0\n    };\n  }\n\n  calcularTodo() {\n    this.calcularMedia();\n    this.calcularVarianza();\n  }\n\n  calcularMedia() {\n    if (this.state.p === 0 || this.state.n === 0) this.setState({\n      media: 0\n    });else {\n      let result = Number(this.state.n) * Number(this.state.n);\n      this.setState({\n        media: result\n      });\n    }\n  }\n\n  calcularVarianza() {\n    this.setState({\n      varianza: 2\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"p\",\n        handleChange: this.changeP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"n\",\n        handleChange: this.changeN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Binomial;","map":{"version":3,"sources":["/home/gol_acheron/exampleproject/src/Distributions/Binomial.js"],"names":["Distribution","React","Component","NumberField","Binomial","constructor","props","changeP","event","setState","p","Number","target","value","console","log","state","calcularTodo","changeN","n","bind","name","media","varianza","calcularMedia","calcularVarianza","result","render"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SA2CpBC,OA3CoB,GA2CV,gBAAgBC,KAAhB,EAAsB;AAC9B,YAAM,KAAKC,QAAL,CAAc;AAACC,QAAAA,CAAC,EAAEC,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaC,KAAd;AAAV,OAAd,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKC,KAAL,CAAWN,CAA9B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,KAAK,CAACI,MAAN,CAAaC,KAApC;AACA,WAAKI,YAAL;AACD,KAhDmB;;AAAA,SAkDpBC,OAlDoB,GAkDV,gBAAgBV,KAAhB,EAAsB;AAC9B,YAAM,KAAKC,QAAL,CAAc;AAACU,QAAAA,CAAC,EAAER,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaC,KAAd;AAAV,OAAd,CAAN;AACA,WAAKI,YAAL;AACD,KArDmB;;AAElB,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaE,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKb,OAAL,GAAe,KAAKA,OAAL,CAAaa,IAAb,CAAkB,IAAlB,CAAf;AAEA,SAAKJ,KAAL,GAAW;AACTK,MAAAA,IAAI,EAAE,UADG;AAETX,MAAAA,CAAC,EAAE,CAFM;AAGTS,MAAAA,CAAC,EAAE,CAHM;AAITG,MAAAA,KAAK,EAAE,CAJE;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAX;AAOD;;AAEDN,EAAAA,YAAY,GAAE;AACZ,SAAKO,aAAL;AACA,SAAKC,gBAAL;AACD;;AAEDD,EAAAA,aAAa,GAAE;AACb,QAAG,KAAKR,KAAL,CAAWN,CAAX,KAAiB,CAAjB,IAAqB,KAAKM,KAAL,CAAWG,CAAX,KAAiB,CAAzC,EACA,KAAKV,QAAL,CAAc;AAACa,MAAAA,KAAK,EAAE;AAAR,KAAd,EADA,KAGI;AACF,UAAII,MAAM,GAAGf,MAAM,CAAC,KAAKK,KAAL,CAAWG,CAAZ,CAAN,GAAuBR,MAAM,CAAC,KAAKK,KAAL,CAAWG,CAAZ,CAA1C;AACA,WAAKV,QAAL,CAAc;AAACa,QAAAA,KAAK,EAAEI;AAAR,OAAd;AACD;AACF;;AAEDD,EAAAA,gBAAgB,GAAE;AAChB,SAAKhB,QAAL,CAAc;AAACc,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,GAApB;AAAyB,QAAA,YAAY,EAAE,KAAKpB;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,GAApB;AAAyB,QAAA,YAAY,EAAE,KAAKW;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWK,IAA/B;AAAqC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,KAAvD;AAA8D,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO;AAAnF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA1C4B;;AAyDjC,eAAenB,QAAf","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\n\nclass Binomial extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial\",\n        p: 0,\n        n: 0,\n        media: 0,\n        varianza: 0\n      }\n    }\n\n    calcularTodo(){\n      this.calcularMedia();\n      this.calcularVarianza();\n    }\n\n    calcularMedia(){\n      if(this.state.p === 0|| this.state.n === 0)\n      this.setState({media: 0})\n\n      else{\n        let result = Number(this.state.n) * Number(this.state.n); \n        this.setState({media: result})\n      }\n    }\n\n    calcularVarianza(){\n      this.setState({varianza: 2})\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} handleChange={this.changeP}/>\n          <NumberField label={\"n\"} handleChange={this.changeN}/>\n          <Distribution name={this.state.name} media={this.state.media} varianza={this.state.varianza}/>\n        </div>\n      )\n    }\n\n    changeP = async function (event){\n      await this.setState({p: Number(event.target.value)});\n      console.log(\"p:\" + this.state.p)\n      console.log(\"leido:\" + event.target.value)\n      this.calcularTodo();\n    }\n\n    changeN = async function (event){\n      await this.setState({n: Number(event.target.value)});\n      this.calcularTodo();\n    }\n}\n\nexport default Binomial;"]},"metadata":{},"sourceType":"module"}