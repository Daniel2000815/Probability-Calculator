{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport BarGraph3 from '../Components/BarGraph3';\nconst gr = {\n  labels: ['January', 'February', 'March', 'April', 'May'],\n  datasets: [{\n    backgroundColor: 'rgba(75,192,192, 0.6)',\n    highlightStroke: \"rgba(220,220,220,1)\",\n    borderWidth: 0,\n    data: [65, 59, 80, 81, 56]\n  }]\n};\n\nclass Binomial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.factorial = n => {\n      return n >= 1 ? n * this.factorial(n - 1) : 1;\n    };\n\n    this.changeP = async function (event) {\n      await this.setState({\n        p: Number(event.target.value)\n      });\n    };\n\n    this.changeN = async function (event) {\n      await this.setState({\n        n: Number(event.target.value)\n      });\n    };\n\n    this.changeN = this.changeN.bind(this);\n    this.changeP = this.changeP.bind(this);\n    this.state = {\n      name: \"Binomial\",\n      p: 0,\n      n: 0,\n      media: 0,\n      varianza: 0,\n      desviacion: 0,\n      labels: [],\n      data: []\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.p !== this.state.p || prevState.n !== this.state.n) {\n      gr.labels = ['a', 'b'];\n      gr.datasets = [{\n        backgroundColor: 'rgba(75,192,192, 0.6)',\n        highlightStroke: \"rgba(220,220,220,1)\",\n        borderWidth: 0,\n        data: [81, 56]\n      }];\n      this.setState({\n        media: this.calcularMedia(),\n        varianza: this.calcularVarianza(),\n        desviacion: this.calcularDesviacion(),\n        data: [1, 2],\n        labels: ['a', 'b']\n      });\n    }\n  }\n\n  calcularMedia() {\n    let result = this.state.n * this.state.p;\n    return result;\n  }\n\n  calcularVarianza() {\n    let result = this.state.n * this.state.p * (1 - this.state.p);\n    return result;\n  }\n\n  calcularDesviacion() {\n    let result = (this.state.n * this.state.p * (1 - this.state.p)) ** (1 / 2);\n    return result;\n  }\n\n  calcularFuncion() {\n    let _data = [];\n\n    for (var i = 0; i < this.state.n; i++) {\n      let prob = this.calcularProbabilidad(i);\n\n      _data.push(Number(prob));\n    }\n\n    return _data;\n  }\n\n  calcularProbabilidad(x) {\n    let result = this.choose(this.state.n, x) * this.state.p ** x * (1 - this.state.p) ** (this.state.n - x);\n    return result;\n  }\n\n  choose(a, b) {\n    let result = this.factorial(a) / (this.factorial(b) * this.factorial(a - b));\n    return result;\n  }\n\n  render() {\n    console.log(this.state.data);\n    console.log(this.state.labels);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"n\",\n        min: 0,\n        max: 9999999,\n        handleChange: this.changeN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"p\",\n        min: 0,\n        max: 1,\n        handleChange: this.changeP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza,\n        desviacion: this.state.desviacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BarGraph3, {\n        data: gr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Binomial;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js"],"names":["Distribution","React","Component","NumberField","BarGraph","BarGraph3","gr","labels","datasets","backgroundColor","highlightStroke","borderWidth","data","Binomial","constructor","props","factorial","n","changeP","event","setState","p","Number","target","value","changeN","bind","state","name","media","varianza","desviacion","componentDidUpdate","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","result","calcularFuncion","_data","i","prob","calcularProbabilidad","push","x","choose","a","b","render","console","log"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph'\nimport BarGraph3 from '../Components/BarGraph3'\n\nconst gr= {\n  labels: ['January', 'February', 'March', 'April', 'May'],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: [65, 59, 80, 81, 56]\n    }\n  ]\n}\nclass Binomial extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial\",\n        p: 0,\n        n: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        labels: [],\n        data: [],\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.n !== this.state.n) {\n        gr.labels = ['a', 'b'];\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: [81, 56]\n          }\n        ]\n\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n          data: [1,2],\n          labels: ['a', 'b'],\n        });\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.n * this.state.p;  \n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.n * this.state.p * (1-this.state.p);  \n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.n * this.state.p * (1-this.state.p)) ** (1/2);\n\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i < this.state.n; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = this.choose(this.state.n, x) * this.state.p**x * (1-this.state.p)**(this.state.n-x);\n      return result;\n    }\n\n    factorial = (n) => {\n      return n >= 1 ? n * this.factorial(n - 1) : 1\n    }\n\n    choose(a,b){\n      let result = (this.factorial(a))/(this.factorial(b) * this.factorial(a-b));\n      return result;\n    }\n\n    render(){\n      console.log(this.state.data);\n      console.log(this.state.labels);\n      return(\n        <div>\n          <NumberField label={\"n\"} min={0} max={9999999} handleChange={this.changeN}/>\n          <NumberField label={\"p\"} min={0} max={1} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph3 data={gr}/>\n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeN = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n}\n\nexport default Binomial;"]},"metadata":{},"sourceType":"module"}