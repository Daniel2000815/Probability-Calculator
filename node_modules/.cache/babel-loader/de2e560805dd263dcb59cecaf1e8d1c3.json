{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/Hipergeometrica.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport { choose, factorial } from '../Libraries/MyMath';\nconst gr = {\n  labels: [],\n  datasets: [{\n    backgroundColor: 'rgba(75,192,192, 0.6)',\n    highlightStroke: \"rgba(220,220,220,1)\",\n    borderWidth: 0,\n    data: []\n  }]\n};\n\nclass Hipergeometrica extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeN = async function (event) {\n      await this.setState({\n        N: Number(event.target.value)\n      });\n    };\n\n    this.changen = async function (event) {\n      await this.setState({\n        n: Number(event.target.value)\n      });\n    };\n\n    this.changek = async function (event) {\n      await this.setState({\n        k: Number(event.target.value)\n      });\n    };\n\n    this.changeP = this.changeP.bind(this);\n    this.changePuntos = this.changePuntos.bind(this);\n    this.state = {\n      name: \"Hipergeométrica\",\n      N: 0,\n      n: 0,\n      k: 0,\n      media: 0,\n      varianza: 0,\n      desviacion: 0\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.N !== this.state.N || prevState.n !== this.state.n || prevState.k !== this.state.k) {\n      this.setState({\n        media: this.calcularMedia(),\n        varianza: this.calcularVarianza(),\n        desviacion: this.calcularDesviacion()\n      });\n      gr.labels = Array.from(Array(this.state.n + 1).keys());\n\n      let _data = this.calcularFuncion();\n\n      gr.datasets = [{\n        backgroundColor: 'rgba(75,192,192, 0.6)',\n        highlightStroke: \"rgba(220,220,220,1)\",\n        borderWidth: 0,\n        data: _data\n      }];\n    }\n  }\n\n  calcularMedia() {\n    let result = this.state.k * this.state.n / this.state.N;\n    return result;\n  }\n\n  calcularVarianza() {\n    let result = this.state.k * this.state.n / this.state.N * (1 - this.state.k / this.state.N) * ((this.state.N - this.state.n) / (this.state.N - 1));\n    return result;\n  }\n\n  calcularDesviacion() {\n    let result = (this.state.k * this.state.n / this.state.N * (1 - this.state.k / this.state.N) * ((this.state.N - this.state.n) / (this.state.N - 1))) ** 0.5;\n    return result;\n  }\n\n  calcularFuncion() {\n    let _data = [];\n\n    for (var i = 0; i <= this.state.n; i++) {\n      let prob = this.calcularProbabilidad(i);\n\n      _data.push(Number(prob));\n    }\n\n    return _data;\n  }\n\n  calcularProbabilidad(x) {\n    let n1 = choose(this.state.k, this.state.n);\n    let n2 = choose(this.state.N - this.state.k, this.state.n - x);\n    let n3 = choose(this.state.N, this.state.n);\n    let result = n1 * n2 / n3;\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"N\",\n        min: 0,\n        max: 100000,\n        step: \"1\",\n        defaultValue: 0,\n        helpText: \"Población original\",\n        handleChange: this.changeN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"n\",\n        min: 0,\n        max: 100000,\n        step: \"1\",\n        defaultValue: 0,\n        helpText: \"Extracción\",\n        handleChange: this.changen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"k\",\n        min: 0,\n        max: 100000,\n        step: \"1\",\n        defaultValue: 0,\n        helpText: \"Población marcada\",\n        handleChange: this.changek\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza,\n        desviacion: this.state.desviacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(BarGraph, {\n          data: gr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Hipergeometrica;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/Hipergeometrica.js"],"names":["Distribution","React","Component","NumberField","BarGraph","choose","factorial","gr","labels","datasets","backgroundColor","highlightStroke","borderWidth","data","Hipergeometrica","constructor","props","changeN","event","setState","N","Number","target","value","changen","n","changek","k","changeP","bind","changePuntos","state","name","media","varianza","desviacion","componentDidUpdate","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","Array","from","keys","_data","calcularFuncion","result","i","prob","calcularProbabilidad","push","x","n1","n2","n3","render"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Hipergeometrica extends Component {\n    constructor (props) {\n      super(props);\n      this.changeP = this.changeP.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Hipergeométrica\",\n        N: 0,\n        n: 0,\n        k: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.N !== this.state.N || prevState.n !== this.state.n || prevState.k !== this.state.k) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.n+1).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.k * this.state.n / this.state.N;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = (this.state.k * this.state.n / this.state.N) * (1-this.state.k/this.state.N)*((this.state.N-this.state.n)/(this.state.N-1));\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = ((this.state.k * this.state.n / this.state.N) * (1-this.state.k/this.state.N)*((this.state.N-this.state.n)/(this.state.N-1)))**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.n; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let n1 = choose(this.state.k, this.state.n);\n      let n2 = choose(this.state.N-this.state.k, this.state.n-x);\n      let n3 = choose(this.state.N, this.state.n);\n\n      let result = n1*n2/n3;\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"N\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Población original\"} handleChange={this.changeN}/>\n          <NumberField label={\"n\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Extracción\"} handleChange={this.changen}/>\n          <NumberField label={\"k\"} min={0} max={100000} step={\"1\"} defaultValue={0} helpText={\"Población marcada\"} handleChange={this.changek}/>          \n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <span> <BarGraph data={gr}/></span>          \n        </div>\n      )\n    }\n\n    changeN = async function(event) {\n      await this.setState({ N: Number(event.target.value) });\n    };\n\n    changen = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n\n    changek = async function(event) {\n      await this.setState({ k: Number(event.target.value) });\n    };\n\n\n}\n\nexport default Hipergeometrica;"]},"metadata":{},"sourceType":"module"}