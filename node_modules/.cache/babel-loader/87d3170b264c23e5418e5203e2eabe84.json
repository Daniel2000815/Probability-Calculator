{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\n\nclass Binomial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeP = async function (event) {\n      await this.updateState({\n        p: Number(event.target.value)\n      });\n    };\n\n    this.changeN = async function (event) {\n      await this.updateState({\n        n: Number(event.target.value)\n      });\n    };\n\n    this.changeN = this.changeN.bind(this);\n    this.changeP = this.changeP.bind(this);\n    this.state = {\n      name: \"Binomial\",\n      p: 0,\n      n: 0,\n      media: 0,\n      varianza: 0,\n      desviacion: 0\n    };\n  }\n\n  updateState(updates) {\n    this.setState(prevState => {\n      const newState = { ...prevState,\n        ...updates\n      };\n      return { ...newState,\n        media: this.calcularMedia(newState),\n        varianza: this.calcularVarianza(newState),\n        desviacion: this.calcularDesviacion(newState)\n      };\n    });\n  }\n\n  calcularMedia(state) {\n    let result = Number(state.n) * Number(state.p);\n    return result;\n  }\n\n  calcularVarianza(state) {\n    let result = state.n * state.p * (1 - state.p);\n    return result;\n  }\n\n  calcularDesviacion(state) {\n    let result = state.varianza ** (1 / 2);\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"n\",\n        min: 0,\n        max: 9999999,\n        handleChange: this.changeN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"p\",\n        min: 0,\n        max: 1,\n        handleChange: this.changeP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Binomial;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js"],"names":["Distribution","React","Component","NumberField","Binomial","constructor","props","changeP","event","updateState","p","Number","target","value","changeN","n","bind","state","name","media","varianza","desviacion","updates","setState","prevState","newState","calcularMedia","calcularVarianza","calcularDesviacion","result","render"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\n\nclass Binomial extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial\",\n        p: 0,\n        n: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0\n      }\n    }\n\n    updateState(updates) {\n      this.setState(prevState => {\n        const newState = { ...prevState, ...updates };\n        return {\n          ...newState,\n          media: this.calcularMedia(newState),\n          varianza: this.calcularVarianza(newState),\n          desviacion: this.calcularDesviacion(newState)\n        };\n      });\n    }\n\n    calcularMedia(state) {\n      let result = Number(state.n) * Number(state.p);\n\n      return result;\n    }\n\n    calcularVarianza(state){\n      let result = state.n * state.p * (1-state.p);\n\n      return result;\n    }\n\n    calcularDesviacion(state){\n      let result = state.varianza ** (1/2);\n\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"n\"} min={0} max={9999999} handleChange={this.changeN}/>\n          <NumberField label={\"p\"} min={0} max={1} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} media={this.state.media} varianza={this.state.varianza}/>\n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.updateState({ p: Number(event.target.value) });\n    };\n  \n    changeN = async function(event) {\n      await this.updateState({ n: Number(event.target.value) });\n    };\n}\n\nexport default Binomial;"]},"metadata":{},"sourceType":"module"}