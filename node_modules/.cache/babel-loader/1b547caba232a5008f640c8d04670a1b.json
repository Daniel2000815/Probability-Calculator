{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\n\nclass Binomial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeP = async function (event) {\n      await this.setState({\n        p: Number(event.target.value)\n      });\n    };\n\n    this.changeN = async function (event) {\n      await this.setState({\n        n: Number(event.target.value)\n      });\n    };\n\n    this.changeN = this.changeN.bind(this);\n    this.changeP = this.changeP.bind(this);\n    this.state = {\n      name: \"Binomial\",\n      p: 0,\n      n: 0,\n      media: 0,\n      varianza: 0\n    };\n  }\n  /*\n  updateState(updates) {\n    this.setState(prevState => {\n      const newState = { ...prevState, ...updates };\n      return {\n        ...newState,\n        media: this.calcularMedia(newState),\n        varianza: this.calcularVarianza(),\n      };\n    });\n  }\n  */\n\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.p !== this.state.p || prevState.n !== this.state.n) {\n      this.calcularTodo();\n    }\n  }\n\n  calcularTodo() {\n    this.calcularMedia();\n    this.calcularVarianza();\n  }\n\n  calcularMedia() {\n    if (this.state.p === 0 || this.state.n === 0) this.setState({\n      media: 0\n    });else {\n      let result = Number(this.state.n) * Number(this.state.n);\n      console.log('CALCULANDO ' + this.state.n + ' * ' + this.state.p + ' = ' + result);\n      this.setState({\n        media: result\n      });\n    }\n  }\n\n  calcularVarianza() {\n    this.setState({\n      varianza: 2\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"p\",\n        handleChange: this.changeP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"n\",\n        handleChange: this.changeN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Binomial;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js"],"names":["Distribution","React","Component","NumberField","Binomial","constructor","props","changeP","event","setState","p","Number","target","value","changeN","n","bind","state","name","media","varianza","componentDidUpdate","_prevProps","prevState","calcularTodo","calcularMedia","calcularVarianza","result","console","log","render"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\n\nclass Binomial extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial\",\n        p: 0,\n        n: 0,\n        media: 0,\n        varianza: 0\n      }\n    }\n\n    /*\n    updateState(updates) {\n      this.setState(prevState => {\n        const newState = { ...prevState, ...updates };\n        return {\n          ...newState,\n          media: this.calcularMedia(newState),\n          varianza: this.calcularVarianza(),\n        };\n      });\n    }\n    */\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.n !== this.state.n) {\n        this.calcularTodo();\n      }\n    }\n\n    calcularTodo(){\n      this.calcularMedia();\n      this.calcularVarianza();\n    }\n\n    calcularMedia() {\n      if (this.state.p === 0 || this.state.n === 0) this.setState({ media: 0 });\n      else {\n        let result = Number(this.state.n) * Number(this.state.n);\n        console.log('CALCULANDO ' + this.state.n + ' * ' + this.state.p + ' = ' + result);\n  \n        this.setState({ media: result });\n      }\n    }\n\n    calcularVarianza() {\n      this.setState({ varianza: 2 });\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} handleChange={this.changeP}/>\n          <NumberField label={\"n\"} handleChange={this.changeN}/>\n          <Distribution name={this.state.name} media={this.state.media} varianza={this.state.varianza}/>\n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n  \n    changeN = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n}\n\nexport default Binomial;"]},"metadata":{},"sourceType":"module"}