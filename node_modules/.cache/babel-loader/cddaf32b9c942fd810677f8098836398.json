{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/BinomialNegativa1.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport NumberSlider from '../Components/NumberSlider';\nimport { choose, factorial } from '../Libraries/MyMath';\nimport CalcProb from '../Components/CalcProb';\nconst gr = {\n  labels: [],\n  datasets: [{\n    backgroundColor: 'rgba(75,192,192, 0.6)',\n    highlightStroke: \"rgba(220,220,220,1)\",\n    borderWidth: 0,\n    data: []\n  }]\n};\n\nclass BinomialNegativa1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeRange = async function (event, value) {\n      await this.setState({\n        probRange: value\n      });\n    };\n\n    this.changeP = async function (event) {\n      await this.setState({\n        p: Number(event.target.value)\n      });\n    };\n\n    this.changeR = async function (event) {\n      await this.setState({\n        r: Number(event.target.value)\n      });\n    };\n\n    this.changePuntos = async function (event, value) {\n      await this.setState({\n        nPoints: Number(value)\n      });\n    };\n\n    this.changeR = this.changeR.bind(this);\n    this.changeP = this.changeP.bind(this);\n    this.changeRange = this.changeRange.bind(this);\n    this.changePuntos = this.changePuntos.bind(this);\n    this.state = {\n      name: \"Binomial Negativa (v1)\",\n      descripcion: \"Número de fracasos ANTES del k-ésimo éxito.\",\n      p: 0,\n      r: 0,\n      media: 0,\n      varianza: 0,\n      nPoints: 1,\n      desviacion: 0,\n      probRange: [0, 0],\n      probabilidad: 0\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints || prevState.r !== this.state.r || prevState.probRange !== this.state.probRange) {\n      this.setState({\n        media: this.calcularMedia(),\n        varianza: this.calcularVarianza(),\n        desviacion: this.calcularDesviacion()\n      });\n      gr.labels = Array.from(Array(this.state.nPoints).keys());\n\n      let _data = this.calcularFuncion();\n\n      gr.datasets = [{\n        backgroundColor: 'rgba(75,192,192, 0.6)',\n        highlightStroke: \"rgba(220,220,220,1)\",\n        borderWidth: 0,\n        data: _data\n      }];\n      let res = 0;\n      console.log(\"CALCULANDO ENTRE \" + this.state.probRange[0] + \" Y \" + this.state.probRange[1]);\n\n      for (let i = this.state.probRange[0]; i <= this.state.probRange[1]; i++) {\n        console.log(this.calcularProbabilidad(i));\n        res += this.calcularProbabilidad(i);\n      }\n\n      console.log(\"RES= \" + res);\n      this.setState({\n        probabilidad: res\n      });\n    }\n  }\n\n  calcularMedia() {\n    let result = this.state.r * (1 - this.state.p) / this.state.p;\n    return result;\n  }\n\n  calcularVarianza() {\n    let result = this.state.r * (1 - this.state.p) / this.state.p ** 2;\n    return result;\n  }\n\n  calcularDesviacion() {\n    let result = (this.state.r * (1 - this.state.p) / this.state.p ** 2) ** 0.5;\n    return result;\n  }\n\n  calcularFuncion() {\n    let _data = [];\n\n    for (var i = this.state.r - 1; i <= this.state.r * 3; i++) {\n      let prob = this.calcularProbabilidad(i);\n\n      _data.push(Number(prob));\n    }\n\n    return _data;\n  }\n\n  calcularProbabilidad(x) {\n    let result = choose(x + this.state.r - 1, x) * this.state.p ** this.state.r * (1 - this.state.p) ** x;\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"p\",\n        min: 0,\n        max: 1,\n        step: \"0.1\",\n        defaultValue: 0,\n        helpText: \"Probabilidad éxito\",\n        handleChange: this.changeP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"k\",\n        min: 1,\n        max: 999999,\n        step: \"1\",\n        defaultValue: 1,\n        helpText: \"Nº éxito\",\n        handleChange: this.changeR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        descripcion: this.state.descripcion,\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza,\n        desviacion: this.state.desviacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BarGraph, {\n        data: gr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberSlider, {\n        min: 0,\n        max: 40,\n        default: 1,\n        step: 1,\n        handleChange: this.changePuntos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CalcProb, {\n        result: this.state.probabilidad,\n        min: 0,\n        max: this.state.nPoints,\n        range: this.state.probRange,\n        handleChange: this.changeRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default BinomialNegativa1;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/BinomialNegativa1.js"],"names":["Distribution","React","Component","NumberField","BarGraph","NumberSlider","choose","factorial","CalcProb","gr","labels","datasets","backgroundColor","highlightStroke","borderWidth","data","BinomialNegativa1","constructor","props","changeRange","event","value","setState","probRange","changeP","p","Number","target","changeR","r","changePuntos","nPoints","bind","state","name","descripcion","media","varianza","desviacion","probabilidad","componentDidUpdate","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","Array","from","keys","_data","calcularFuncion","res","console","log","i","calcularProbabilidad","result","prob","push","x","render"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport NumberSlider from '../Components/NumberSlider';\nimport {choose, factorial} from '../Libraries/MyMath';\nimport CalcProb from '../Components/CalcProb';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\n\nclass BinomialNegativa1 extends Component {\n    constructor (props) {\n      super(props);\n      this.changeR = this.changeR.bind(this);\n      this.changeP = this.changeP.bind(this);\n      this.changeRange = this.changeRange.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Binomial Negativa (v1)\",\n        descripcion: \"Número de fracasos ANTES del k-ésimo éxito.\",\n        p: 0,\n        r: 0,\n        media: 0,\n        varianza: 0,\n        nPoints: 1,\n        desviacion: 0,\n        probRange: [0,0],\n        probabilidad: 0\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.nPoints !== this.state.nPoints || prevState.r !== this.state.r || prevState.probRange !== this.state.probRange) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n\n        gr.labels = Array.from(Array(this.state.nPoints).keys());\n        let _data = this.calcularFuncion();\n      \n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n\n        let res = 0;\n        console.log(\"CALCULANDO ENTRE \" + this.state.probRange[0] + \" Y \" + this.state.probRange[1]);\n        for(let i=this.state.probRange[0]; i<=this.state.probRange[1]; i++){\n          console.log(this.calcularProbabilidad(i))\n          res += this.calcularProbabilidad(i);\n        }\n        console.log(\"RES= \" + res );\n        this.setState({\n          probabilidad: res\n        })\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.r * (1-this.state.p) / this.state.p;\n      return result;\n    }\n  \n    calcularVarianza() {\n      let result = this.state.r * (1-this.state.p) / this.state.p**2;\n      return result;\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.r * (1-this.state.p) / this.state.p**2)**(0.5);\n      return result;\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = this.state.r-1 ; i <= this.state.r*3; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = choose(x+this.state.r -1, x) * this.state.p**(this.state.r) * (1-this.state.p)**x;\n      return result; \n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad éxito\"} handleChange={this.changeP}/>\n          <NumberField label={\"k\"} min={1} max={999999} step={\"1\"} defaultValue={1} helpText={\"Nº éxito\"} handleChange={this.changeR}/>\n          <Distribution \n            descripcion={this.state.descripcion}\n            name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <BarGraph data={gr}/>\n          <NumberSlider min={0} max={40} default={1} step={1} handleChange={this.changePuntos}/>\n          <CalcProb result={this.state.probabilidad} min={0} max={this.state.nPoints} range={this.state.probRange} handleChange={this.changeRange}/>\n          \n        </div>\n      )\n    }\n\n    changeRange = async function(event, value) {\n      await this.setState({ probRange: value });\n    };\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeR = async function(event) {\n      await this.setState({ r: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event, value) {\n      await this.setState({ nPoints: Number(value) });\n    };\n}\n\nexport default BinomialNegativa1;"]},"metadata":{},"sourceType":"module"}