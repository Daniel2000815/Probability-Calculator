{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\nimport LineGraph from '../Components/LineGraph';\n\nclass Binomial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeP = async function (event) {\n      await this.setState({\n        p: Number(event.target.value)\n      });\n    };\n\n    this.changeN = async function (event) {\n      await this.setState({\n        n: Number(event.target.value)\n      });\n    };\n\n    this.changeN = this.changeN.bind(this);\n    this.changeP = this.changeP.bind(this);\n    this.state = {\n      name: \"Binomial\",\n      p: 0,\n      n: 0,\n      media: 0,\n      varianza: 0,\n      desviacion: 0,\n      nPoints: 50,\n      labels: [],\n      data: []\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.p !== this.state.p || prevState.n !== this.state.n) {\n      this.calcularMedia();\n      this.calcularVarianza();\n      this.calcularDesviacion();\n    }\n  }\n\n  calcularMedia() {\n    let result = this.state.n * this.state.p;\n    console.log('CALCULANDO ' + this.state.n + ' * ' + this.state.p + ' = ' + result);\n    this.setState({\n      media: result\n    });\n  }\n\n  calcularVarianza() {\n    let result = this.state.n * this.state.p * (1 - this.state.p);\n    this.setState({\n      media: result\n    });\n  }\n\n  calcularDesviacion() {\n    let result = (this.state.n * this.state.p * (1 - this.state.p)) ** (1 / 2);\n    this.setState({\n      desviacion: result\n    });\n  }\n  /*\n  calcularFuncion(){\n    this.state.data = [];\n    this.state.labels = [];\n     for (var i = 0; i < state.nPoints; i++) {\n      state.labels.push(i);\n       let prob = this.calcularProbabilidad(state, i);\n      state.data.push(prob);\n    } \n  }\n  */\n\n\n  calcularProbabilidad(state, x) {\n    let result = this.choose(state.n, x) * state.p ** x * (1 - state.p) ** (state.n - x);\n  }\n\n  factorial(n) {\n    if (n === 1) {\n      return 1;\n    }\n\n    return n * this.factorial(n - 1);\n  }\n\n  choose(a, b) {\n    let result = this.factorial(a) / (this.factorial(b) * this.factorial(a - b));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"n\",\n        min: 0,\n        max: 9999999,\n        handleChange: this.changeN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"p\",\n        min: 0,\n        max: 1,\n        handleChange: this.changeP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza,\n        desviacion: this.state.desviacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n        _labels: ['a', 'b'],\n        _data: [1, 2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Binomial;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/Binomial.js"],"names":["Distribution","React","Component","NumberField","LineGraph","Binomial","constructor","props","changeP","event","setState","p","Number","target","value","changeN","n","bind","state","name","media","varianza","desviacion","nPoints","labels","data","componentDidUpdate","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","result","console","log","calcularProbabilidad","x","choose","factorial","a","b","render"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport LineGraph from '../Components/LineGraph'\n\nclass Binomial extends Component {\n    constructor (props) {\n      super(props);\n      this.changeN = this.changeN.bind(this);\n      this.changeP = this.changeP.bind(this);\n\n      this.state={\n        name: \"Binomial\",\n        p: 0,\n        n: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 50,\n        labels: [],\n        data: []\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.p !== this.state.p || prevState.n !== this.state.n) {\n        this.calcularMedia();\n        this.calcularVarianza();\n        this.calcularDesviacion();\n      }\n    }\n\n    calcularMedia() {\n      let result = this.state.n * this.state.p;  \n      console.log('CALCULANDO ' + this.state.n + ' * ' + this.state.p + ' = ' + result);\n      this.setState({ media: result });\n    }\n  \n    calcularVarianza() {\n      let result = this.state.n * this.state.p * (1-this.state.p);  \n      this.setState({ media: result });\n    }\n\n    calcularDesviacion(){\n      let result = (this.state.n * this.state.p * (1-this.state.p)) ** (1/2);\n\n      this.setState({ desviacion: result });\n    }\n\n    /*\n    calcularFuncion(){\n      this.state.data = [];\n      this.state.labels = [];\n\n      for (var i = 0; i < state.nPoints; i++) {\n        state.labels.push(i);\n\n        let prob = this.calcularProbabilidad(state, i);\n        state.data.push(prob);\n      } \n    }\n    */\n\n\n    calcularProbabilidad(state, x){\n      let result = this.choose(state.n, x) * state.p**x * (1-state.p)**(state.n-x);\n    }\n\n    factorial(n) {\n      if (n === 1) {\n        return 1;\n      }\n      \n      return n * this.factorial(n - 1);\n    }\n\n    choose(a,b){\n      let result = (this.factorial(a))/(this.factorial(b) * this.factorial(a-b));\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"n\"} min={0} max={9999999} handleChange={this.changeN}/>\n          <NumberField label={\"p\"} min={0} max={1} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <LineGraph _labels={['a', 'b']} _data= {[1,2]}/>\n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changeN = async function(event) {\n      await this.setState({ n: Number(event.target.value) });\n    };\n}\n\nexport default Binomial;"]},"metadata":{},"sourceType":"module"}