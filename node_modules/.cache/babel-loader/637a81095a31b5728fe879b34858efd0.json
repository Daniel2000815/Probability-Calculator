{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/Poisson.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport { choose, factorial } from '../Libraries/MyMath';\nconst gr = {\n  labels: [],\n  datasets: [{\n    backgroundColor: 'rgba(75,192,192, 0.6)',\n    highlightStroke: \"rgba(220,220,220,1)\",\n    borderWidth: 0,\n    data: []\n  }]\n};\n\nclass Poisson extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeP = async function (event) {\n      await this.setState({\n        p: Number(event.target.value)\n      });\n    };\n\n    this.changePuntos = async function (event) {\n      await this.setState({\n        nPoints: Number(event.target.value)\n      });\n    };\n\n    this.changeL = this.changeL.bind(this);\n    this.changePuntos = this.changePuntos.bind(this);\n    this.state = {\n      name: \"Poisson\",\n      l: 0,\n      media: 0,\n      varianza: 0,\n      desviacion: 0,\n      nPoints: 1\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.l !== this.state.l || prevState.nPoints !== this.state.nPoints) {\n      this.setState({\n        media: this.calcularMedia(),\n        varianza: this.calcularVarianza(),\n        desviacion: this.calcularDesviacion()\n      });\n      gr.labels = Array.from(Array(this.state.nPoints).keys());\n\n      let _data = this.calcularFuncion();\n\n      gr.datasets = [{\n        backgroundColor: 'rgba(75,192,192, 0.6)',\n        highlightStroke: \"rgba(220,220,220,1)\",\n        borderWidth: 0,\n        data: _data\n      }];\n    }\n  }\n\n  calcularMedia() {\n    return this.state.l;\n  }\n\n  calcularVarianza() {\n    return this.state.l;\n  }\n\n  calcularDesviacion() {\n    return this.state.l ** 0.5;\n  }\n\n  calcularFuncion() {\n    let _data = [];\n\n    for (var i = 0; i <= this.state.nPoints; i++) {\n      let prob = this.calcularProbabilidad(i);\n\n      _data.push(Number(prob));\n    }\n\n    return _data;\n  }\n\n  calcularProbabilidad(x) {\n    let result = Math.exp(-this.state.l) * this.state.l ** x / factorial(x);\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"p\",\n        min: 0,\n        max: 1,\n        step: \"0.1\",\n        defaultValue: 0,\n        helpText: \"Probabilidad\",\n        handleChange: this.changeP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        media: this.state.media,\n        varianza: this.state.varianza,\n        desviacion: this.state.desviacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(BarGraph, {\n          data: gr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"Puntos a calcular\",\n        min: 0,\n        max: 999999,\n        step: \"1\",\n        defaultValue: 1,\n        handleChange: this.changePuntos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Geometrica;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/Poisson.js"],"names":["Distribution","React","Component","NumberField","BarGraph","choose","factorial","gr","labels","datasets","backgroundColor","highlightStroke","borderWidth","data","Poisson","constructor","props","changeP","event","setState","p","Number","target","value","changePuntos","nPoints","changeL","bind","state","name","l","media","varianza","desviacion","componentDidUpdate","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","Array","from","keys","_data","calcularFuncion","i","prob","calcularProbabilidad","push","x","result","Math","exp","render","Geometrica"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Poisson extends Component {\n    constructor (props) {\n      super(props);\n      this.changeL = this.changeL.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Poisson\",\n        l: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 1\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.l !== this.state.l || prevState.nPoints !== this.state.nPoints) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.nPoints).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      return this.state.l;\n    }\n  \n    calcularVarianza() {\n      return this.state.l;\n    }\n\n    calcularDesviacion(){\n      return this.state.l**(0.5);\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = Math.exp(-this.state.l) * (this.state.l ** x) / factorial(x);\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"p\"} min={0} max={1} step={\"0.1\"} defaultValue={0} helpText={\"Probabilidad\"} handleChange={this.changeP}/>\n          <Distribution name={this.state.name} \n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <span> <BarGraph data={gr}/></span>\n          <NumberField label={\"Puntos a calcular\"} min={0} max={999999} step={\"1\"} defaultValue={1} handleChange={this.changePuntos}/>         \n          \n        </div>\n      )\n    }\n\n    changeP = async function(event) {\n      await this.setState({ p: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event) {\n      await this.setState({ nPoints: Number(event.target.value) });\n    };\n\n}\n\nexport default Geometrica;"]},"metadata":{},"sourceType":"module"}