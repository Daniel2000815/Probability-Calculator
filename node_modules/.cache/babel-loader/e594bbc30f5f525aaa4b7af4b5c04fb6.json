{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/probability-calculator/src/Distributions/Poisson.js\";\nimport Distribution from './Distribution';\nimport React, { Component } from 'react';\nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport NumberSlider from '../Components/NumberSlider';\nimport { choose, factorial } from '../Libraries/MyMath';\nconst gr = {\n  labels: [],\n  datasets: [{\n    backgroundColor: 'rgba(75,192,192, 0.6)',\n    highlightStroke: \"rgba(220,220,220,1)\",\n    borderWidth: 0,\n    data: []\n  }]\n};\n\nclass Poisson extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeL = async function (event) {\n      await this.setState({\n        l: Number(event.target.value)\n      });\n    };\n\n    this.changePuntos = async function (event, value) {\n      await this.setState({\n        nPoints: Number(value)\n      });\n    };\n\n    this.changeL = this.changeL.bind(this);\n    this.changePuntos = this.changePuntos.bind(this);\n    this.state = {\n      name: \"Poisson\",\n      descripcion: \"Número de veces que ocurre un suceso RARO por unidades de tiempo.\",\n      l: 0,\n      media: 0,\n      varianza: 0,\n      desviacion: 0,\n      nPoints: 1\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.l !== this.state.l || prevState.nPoints !== this.state.nPoints) {\n      this.setState({\n        media: this.calcularMedia(),\n        varianza: this.calcularVarianza(),\n        desviacion: this.calcularDesviacion()\n      });\n      gr.labels = Array.from(Array(this.state.nPoints).keys());\n\n      let _data = this.calcularFuncion();\n\n      gr.datasets = [{\n        backgroundColor: 'rgba(75,192,192, 0.6)',\n        highlightStroke: \"rgba(220,220,220,1)\",\n        borderWidth: 0,\n        data: _data\n      }];\n    }\n  }\n\n  calcularMedia() {\n    return this.state.l;\n  }\n\n  calcularVarianza() {\n    return this.state.l;\n  }\n\n  calcularDesviacion() {\n    return this.state.l ** 0.5;\n  }\n\n  calcularFuncion() {\n    let _data = [];\n\n    for (var i = 0; i <= this.state.nPoints; i++) {\n      let prob = this.calcularProbabilidad(i);\n\n      _data.push(Number(prob));\n    }\n\n    return _data;\n  }\n\n  calcularProbabilidad(x) {\n    let result = Math.exp(-this.state.l) * this.state.l ** x / factorial(x);\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: \"λ\",\n        min: 0,\n        max: 999999,\n        step: \"0.1\",\n        defaultValue: 0,\n        helpText: \"Proporción\",\n        handleChange: this.changeL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n        name: this.state.name,\n        descripcion: this.state.descripcion,\n        media: this.state.media,\n        varianza: this.state.varianza,\n        desviacion: this.state.desviacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(BarGraph, {\n            data: gr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NumberSlider, {\n          min: 0,\n          max: 70,\n          default: 1,\n          step: 1,\n          handleChange: this.changePuntos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Poisson;","map":{"version":3,"sources":["/home/gol_acheron/probability-calculator/src/Distributions/Poisson.js"],"names":["Distribution","React","Component","NumberField","BarGraph","NumberSlider","choose","factorial","gr","labels","datasets","backgroundColor","highlightStroke","borderWidth","data","Poisson","constructor","props","changeL","event","setState","l","Number","target","value","changePuntos","nPoints","bind","state","name","descripcion","media","varianza","desviacion","componentDidUpdate","_prevProps","prevState","calcularMedia","calcularVarianza","calcularDesviacion","Array","from","keys","_data","calcularFuncion","i","prob","calcularProbabilidad","push","x","result","Math","exp","render"],"mappings":"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","sourcesContent":["import Distribution from './Distribution';\nimport React, {Component} from 'react'; \nimport NumberField from '../Components/NumberField';\nimport BarGraph from '../Components/BarGraph';\nimport NumberSlider from '../Components/NumberSlider';\n\nimport {choose, factorial} from '../Libraries/MyMath';\n\nconst gr= {\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: 'rgba(75,192,192, 0.6)',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: []\n    }\n  ]\n}\nclass Poisson extends Component {\n    constructor (props) {\n      super(props);\n      this.changeL = this.changeL.bind(this);\n      this.changePuntos = this.changePuntos.bind(this);\n\n      this.state={\n        name: \"Poisson\",\n        descripcion: \"Número de veces que ocurre un suceso RARO por unidades de tiempo.\",\n        l: 0,\n        media: 0,\n        varianza: 0,\n        desviacion: 0,\n        nPoints: 1\n      }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.l !== this.state.l || prevState.nPoints !== this.state.nPoints) {\n        this.setState({\n          media: this.calcularMedia(),\n          varianza: this.calcularVarianza(),\n          desviacion: this.calcularDesviacion(),\n        });\n        gr.labels = Array.from(Array(this.state.nPoints).keys())\n        let _data = this.calcularFuncion();\n\n        gr.datasets = [\n          {\n            backgroundColor: 'rgba(75,192,192, 0.6)',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: _data\n          }\n        ]\n      }\n    }\n\n    calcularMedia() {\n      return this.state.l;\n    }\n  \n    calcularVarianza() {\n      return this.state.l;\n    }\n\n    calcularDesviacion(){\n      return this.state.l**(0.5);\n    }\n\n    \n    calcularFuncion(){\n      let _data = [];\n\n      for (var i = 0; i <= this.state.nPoints; i++) {\n        let prob = this.calcularProbabilidad(i);\n        _data.push(Number(prob));\n      } \n\n      return _data;\n    }\n\n    calcularProbabilidad(x){\n      let result = Math.exp(-this.state.l) * (this.state.l ** x) / factorial(x);\n      return result;\n    }\n\n    render(){\n      return(\n        <div>\n          <NumberField label={\"λ\"} min={0} max={999999} step={\"0.1\"} defaultValue={0} helpText={\"Proporción\"} handleChange={this.changeL}/>\n          \n          \n          <Distribution name={this.state.name} \n            descripcion={this.state.descripcion}\n            media={this.state.media} \n            varianza={this.state.varianza}\n            desviacion={this.state.desviacion}\n          />\n          <>\n          <span> <BarGraph data={gr}/> </span>\n          <NumberSlider min={0} max={70} default={1} step={1} handleChange={this.changePuntos}/>\n          </>\n        \n        </div>\n      )\n    }\n\n    changeL = async function(event) {\n      await this.setState({ l: Number(event.target.value) });\n    };\n\n    changePuntos = async function(event, value) {\n      await this.setState({ nPoints: Number(value) });\n    };\n\n}\n\nexport default Poisson;"]},"metadata":{},"sourceType":"module"}